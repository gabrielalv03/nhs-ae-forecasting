# ──────────────────────────────────────────────────────────────────────────────
# 0. Packages
# ──────────────────────────────────────────────────────────────────────────────
library(sf)
library(dplyr)
library(ggplot2)
library(viridis)
library(gridExtra)
conflicts_prefer(ggplot2::margin)

# ──────────────────────────────────────────────────────────────────────────────
# 1. Clean region names
# ──────────────────────────────────────────────────────────────────────────────
clean_region_names <- function(x) {
  x %>%
    tolower() %>%
    trimws() %>%
    gsub("^nhs england ", "", .)
}

# ──────────────────────────────────────────────────────────────────────────────
# 2. Load and prep shapefile
# ──────────────────────────────────────────────────────────────────────────────
load_regions_map <- function(shapefile_path) {
  st_read(shapefile_path, quiet = TRUE) %>%
    mutate(NHSER24NM = clean_region_names(NHSER24NM))
}

# ──────────────────────────────────────────────────────────────────────────────
# 3. Forecast vs baseline %>4h
# ──────────────────────────────────────────────────────────────────────────────
calculate_forecast_baseline_over4 <- function(forecast_df, train_df) {
  forecast_df <- forecast_df %>%
    mutate(region = clean_region_names(region),
           ds     = as.Date(ds))
  train_df <- train_df %>%
    rename(ds = date) %>%
    mutate(region = clean_region_names(region),
           ds     = as.Date(ds))
  
  fc <- forecast_df %>%
    filter(ds >= as.Date("2024-07-01"), ds <= as.Date("2024-12-31")) %>%
    group_by(region) %>%
    summarise(predicted_over4 = mean(pred_xgb_AE_over4_tot, na.rm = TRUE), .groups="drop")
  
  bs <- train_df %>%
    filter(ds >= as.Date("2024-01-01"), ds <= as.Date("2024-06-30")) %>%
    group_by(region) %>%
    summarise(baseline_over4 = mean(AE_over4_pct, na.rm = TRUE), .groups="drop")
  
  left_join(fc, bs, by="region") %>%
    mutate(pct_change = (predicted_over4 - baseline_over4) / baseline_over4)
}

# ──────────────────────────────────────────────────────────────────────────────
# 4. Error metrics (MAE & RMSE)
# ──────────────────────────────────────────────────────────────────────────────
calculate_error_metrics_over4 <- function(df) {
  df %>%
    mutate(region = clean_region_names(region),
           ds     = as.Date(ds)) %>%
    filter(ds >= as.Date("2024-07-01"), ds <= as.Date("2024-12-31")) %>%
    group_by(region) %>%
    summarise(
      mae  = mean(abs(actual_AE_over4_pct - pred_xgb_AE_over4_tot), na.rm=TRUE),
      rmse = sqrt(mean((actual_AE_over4_pct - pred_xgb_AE_over4_tot)^2, na.rm=TRUE)),
      .groups="drop"
    )
}

# ──────────────────────────────────────────────────────────────────────────────
# 5. Join spatial + metrics
# ──────────────────────────────────────────────────────────────────────────────
prepare_map_data_over4 <- function(reg, hm, em) {
  reg %>%
    left_join(hm, by = c("NHSER24NM" = "region")) %>%
    left_join(em, by = c("NHSER24NM" = "region"))
}

# ──────────────────────────────────────────────────────────────────────────────
# 6. Map with NO legend (guide = "none")
# ──────────────────────────────────────────────────────────────────────────────
plot_map_with_scale <- function(map_df) {
  ggplot(map_df) +
    geom_sf(aes(fill = pct_change),
            color     = "white",
            linewidth = 0.3) +
    scale_fill_viridis_c(
      name   = "% Change",
      option = "C",
      labels = scales::percent,
      guide  = guide_colorbar(
        title.position  = "top",
        barwidth        = unit(0.5, "cm"),
        barheight       = unit(5,   "cm"),
        title.hjust     = 0.5
      )
    ) +
    labs(
      title    = "Forecasted % A&E Attendances > 4h Surge by NHS Region",
      subtitle = "Jul–Dec 2024 vs Jan–Jun 2024"
    ) +
    theme_minimal() +
    theme(
      plot.title        = element_text(hjust = 0.5),
      plot.subtitle     = element_text(hjust = 0.5),
      
      # move the legend to the right, outside the plot area:
      legend.position   = c(1.1, 0.5),
      legend.justification = c(0, 0.5),
      
      # enlarge the right margin so it actually has space:
      plot.margin       = margin(t = 5, r = 40, b = 5, l = 5),
      
      legend.title      = element_text(size = 9, face = "bold"),
      legend.text       = element_text(size = 8),
      legend.background = element_blank()
    )
}

# ──────────────────────────────────────────────────────────────────────────────
# 7. Custom tile + text legend in *two* columns
# ──────────────────────────────────────────────────────────────────────────────
create_legend_plot_over4 <- function(map_df, n_cols = 2) {
  legend_data <- map_df %>%
    st_drop_geometry() %>%
    arrange(desc(pct_change)) %>%
    mutate(
      Region = tools::toTitleCase(NHSER24NM),
      Label  = paste0(
        Region, 
        ": RMSE = ", sprintf("%.4f", rmse),
        "; Δ = ", sprintf("%.1f%%", pct_change * 100)
      ),
      Fill   = pct_change
    )
  
  n_regions <- nrow(legend_data)
  n_rows    <- ceiling(n_regions / n_cols)
  
  legend_data <- legend_data %>%
    mutate(
      row = rep(1:n_rows, times = n_cols)[1:n_regions],
      col = rep(1:n_cols, each = n_rows)[1:n_regions],
      x = ifelse(col == 1, 1, 2.9) - 0.1,
      y = -row
    )
  
  ggplot(legend_data) +
    geom_tile(aes(x = x, y = y, fill = Fill), width = 0.05, height = 0.8) +
    geom_text(aes(x = x + 0.08, y = y, label = Label), hjust = 0, size = 3.2) +
    scale_fill_viridis_c(option = "C", guide = "none") +
    labs(title = "RMSE & % Change by Region") +
    theme_void() +
    theme(
      plot.title = element_text(size = 10, face = "bold", hjust = 0.5),
      plot.margin = margin(5, 5, 5, 5)
    ) +
    coord_cartesian(clip = "off", xlim = c(0.8, 4)) +
    xlim(0.8, 3.2)
}

# ──────────────────────────────────────────────────────────────────────────────
# 8. Build & draw
# ──────────────────────────────────────────────────────────────────────────────
shp_dir  <- "~/Downloads/NHS_England_Regions_January_2024_EN_BGC_7344996574699915597"
shp_file <- file.path(shp_dir, "NHSER_JAN_2024_EN_BGC.shp")

# Verify it exists:
file.exists(shp_file)   # should return TRUE

# Then read:
regions_sf <- load_regions_map(shp_file)

# — compute the over-4h forecast vs baseline
hm_over4     <- calculate_forecast_baseline_over4(comparison_over4_region_df, train_data)
em_over4     <- calculate_error_metrics_over4(comparison_over4_region_df)

# — join into one sf object
map_df_over4 <- prepare_map_data_over4(regions_sf, hm_over4, em_over4)
map_plot <- plot_map_with_scale(map_df_over4)
legend_plot <- create_legend_plot_over4(map_df_over4, n_cols = 2)

grid.arrange(
  map_plot,
  legend_plot,
  nrow    = 2,
  heights = c(2.5, 1.2)
)

