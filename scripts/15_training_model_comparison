rmse <- function(actual, predicted) {
  sqrt(mean((actual - predicted)^2, na.rm = TRUE))
}

mae <- function(actual, predicted) {
  mean(abs(actual - predicted), na.rm = TRUE)
}

train_region_data_att <- train_data %>%
  mutate(across(c(season, region, pandemic_flag), as.factor)) %>%
  group_by(region, date) %>%
  summarise(
    AE_att_tot = sum(AE_att_tot, na.rm = TRUE),
    across(all_of(predictors_numeric), ~ mean(.x, na.rm = TRUE)),
    season = first(season),
    pandemic_flag = first(pandemic_flag),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

train_region_data_over4 <- train_data %>%
  mutate(across(c(season, region, pandemic_flag), as.factor)) %>%
  group_by(region, date) %>%
  summarise(
    AE_per4_all = mean(AE_per4_all, na.rm = TRUE),
    AE_over4_pct = 1 - AE_per4_all,
    across(all_of(predictors_numeric), ~ mean(.x, na.rm = TRUE)),
    season = first(season),
    pandemic_flag = first(pandemic_flag),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

train_trust_data_att <- train_data %>%
  mutate(across(c(season, name, pandemic_flag), as.factor)) %>%
  group_by(name, date) %>%
  summarise(
    AE_att_tot = sum(AE_att_tot, na.rm = TRUE),
    across(all_of(predictors_numeric), ~ mean(.x, na.rm = TRUE)),
    season = first(season),
    pandemic_flag = first(pandemic_flag),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

train_trust_data_over4 <- train_data %>%
  mutate(across(c(season, name, pandemic_flag), as.factor)) %>%
  group_by(name, date) %>%
  summarise(
    AE_per4_all = mean(AE_per4_all, na.rm = TRUE),
    AE_over4_pct = 1 - AE_per4_all,
    across(all_of(predictors_numeric), ~ mean(.x, na.rm = TRUE)),
    season = first(season),
    pandemic_flag = first(pandemic_flag),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

lm_region_data_att <- train_region_data_att %>% mutate(date = as.numeric(date))
lm_region_data_over4 <- train_region_data_over4 %>% mutate(date = as.numeric(date))
lm_trust_data_att     <- train_trust_data_att     %>% mutate(date = as.numeric(date))
lm_trust_data_over4   <- train_trust_data_over4   %>% mutate(date = as.numeric(date))

pred_lm_att_region <- predict(lm_attendance_region, newdata = lm_region_data_att)
actual_att_region <- train_region_data_att$AE_att_tot
rmse(actual_att_region, pred_lm_att_region)
mae(actual_att_region, pred_lm_att_region)

pred_lm_att_trust <- predict(lm_attendance_trust, newdata = lm_trust_data_att)
actual_att_trust <- train_trust_data_att$AE_att_tot
rmse(actual_att_trust, pred_lm_att_trust)
mae(actual_att_trust, pred_lm_att_trust)

pred_lm_over4_region <- predict(lm_over4_region, newdata = lm_region_data_over4)
actual_over4_region <- train_region_data_over4$AE_per4_all
rmse(actual_over4_region, pred_lm_over4_region)
mae(actual_over4_region, pred_lm_over4_region)

pred_lm_over4_trust <- predict(lm_over4_trust, newdata = lm_trust_data_over4)
actual_over4_trust <- train_trust_data_over4$AE_per4_all
rmse(actual_over4_trust, pred_lm_over4_trust)
mae(actual_over4_trust, pred_lm_over4_trust)

rf_region_data_att <- train_region_data_att %>% mutate(date = as.numeric(date))
rf_region_data_over4 <- train_region_data_over4 %>% mutate(date = as.numeric(date))
rf_trust_data_att <- train_trust_data_att %>% mutate(date = as.numeric(date))
rf_trust_data_over4 <- train_trust_data_over4 %>% mutate(date = as.numeric(date))

# Align factor levels for season using training data used during RF model training
rf_region_data_att <- rf_region_data_att %>%
  mutate(
    season = factor(season, levels = levels(rf_att_region_data$season)),
    pandemic_flag = as.numeric(as.character(pandemic_flag)),  # <- FIX
    region = as.character(region)  # optional: avoid factor issues if used in training
  )

rf_trust_data_att <- rf_trust_data_att %>%
  filter(name %in% observed_trusts) %>%
  mutate(
    name = factor(name, levels = levels(rf_att_trust_data$name)),
    season = factor(season, levels = levels(rf_att_trust_data$season)),
    pandemic_flag = as.numeric(as.character(pandemic_flag))
  )

rf_region_data_over4 <- rf_region_data_over4 %>%
  mutate(
    season = factor(season, levels = levels(rf_over4_region_data$season)),
    pandemic_flag = as.numeric(as.character(pandemic_flag)),  # <- FIX
    region = as.character(region)  # optional: avoid factor issues if used in training
  )

rf_trust_data_over4 <- rf_trust_data_over4 %>%
  filter(name %in% observed_trusts) %>%
  mutate(
    name = factor(name, levels = levels(rf_over4_trust_data$name)),
    season = factor(season, levels = levels(rf_over4_trust_data$season)),
    pandemic_flag = as.numeric(as.character(pandemic_flag))
  )


pred_rf_att_region <- predict(rf_attendance_region, newdata = rf_region_data_att)
rf_trust_data_att <- rf_trust_data_att[, names(rf_att_trust_data)]
rf_trust_data_att <- rf_trust_data_att %>%
  mutate(
    name = as.character(name),
    date = as.Date(date, origin = "1970-01-01"),  # because numeric likely came from as.numeric(Date)
    season = factor(season, levels = levels(rf_att_trust_data$season))
  )

pred_rf_att_trust <- predict(rf_attendance_trust, newdata = rf_trust_data_att)
pred_rf_over4_region <- predict(rf_over4_region, newdata = rf_region_data_over4)
rf_trust_data_over4 <- rf_trust_data_over4[, names(rf_over4_trust_data)]
rf_trust_data_over4 <- rf_trust_data_over4 %>%
  mutate(
    name = as.character(name),
    date = as.Date(date, origin = "1970-01-01"),  # because numeric likely came from as.numeric(Date)
    season = factor(season, levels = levels(rf_att_trust_data$season))
  )

pred_rf_over4_trust <- predict(rf_over4_trust, newdata = rf_trust_data_over4)

# Predicted vs Actual for lm_attendance_region
rmse(actual_att_region, pred_lm_att_region)  # Calculate RMSE
mae(actual_att_region, pred_lm_att_region)   # Calculate MAE

# Evaluate Random Forest (RF)
rmse(actual_att_region, pred_rf_att_region)
mae(actual_att_region, pred_rf_att_region)
