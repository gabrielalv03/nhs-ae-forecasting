# === METRIC FUNCTIONS ===
rmse <- function(actual, predicted) {
  sqrt(mean((actual - predicted)^2, na.rm = TRUE))
}

mae <- function(actual, predicted) {
  mean(abs(actual - predicted), na.rm = TRUE)
}

# === BUILD RESULTS TABLE ===
results <- data.frame(
  Model = c(
    "LM Attendance (Region)", "LM Attendance (Trust)",
    "LM Over 4h % (Region)",  "LM Over 4h % (Trust)",
    "RF Attendance (Region)", "RF Attendance (Trust)",
    "RF Over 4h % (Region)",  "RF Over 4h % (Trust)",
    "Prophet Attendance (Region)", "Prophet Attendance (Trust)",
    "Prophet Over 4h % (Region)",  "Prophet Over 4h % (Trust)",
    "XGB Attendance (Region)", "XGB Attendance (Trust)",
    "XGB Over 4h % (Region)",  "XGB Over 4h % (Trust)"
  ),
  RMSE = c(
    rmse(lm_model_att_region_anova$AE_att_tot,   lm_attendance_region_preds),
    rmse(lm_model_att_trust_anova$AE_att_tot,    lm_attendance_trust_preds),
    rmse(lm_model_over4_region_anova$AE_per4_all, lm_over4_region_preds),
    rmse(lm_model_over4_trust_anova$AE_per4_all,  lm_over4_trust_preds),
    rmse(rf_model_att_region_full$AE_att_tot,     rf_attendance_region_preds),
    rmse(rf_model_att_trust_full$AE_att_tot,      rf_attendance_trust_preds),
    rmse(rf_model_over4_region_full$AE_over4_pct, rf_over4_region_preds),
    rmse(rf_model_over4_trust_full$AE_over4_pct,  rf_over4_trust_preds),
    rmse(prophet_fitted_values_att_region$y,      prophet_fitted_values_att_region$yhat),
    rmse(prophet_fitted_values_trust$y,           prophet_fitted_values_trust$yhat),
    rmse(prophet_fitted_values_over4_region$y,    prophet_fitted_values_over4_region$yhat),
    rmse(prophet_fitted_values_over4_trust$y,     prophet_fitted_values_over4_trust$yhat),
    rmse(xgb_data_att_region_full$AE_att_tot,     xgb_data_att_region_full$pred_xgb_att_region),
    rmse(xgb_data_att_trust_full$AE_att_tot,      xgb_data_att_trust_full$pred_xgb_att_trust),
    rmse(xgb_data_over4_region_full$AE_over4_pct, xgb_data_over4_region_full$pred_xgb_over4_region),
    rmse(xgb_data_over4_trust_full$AE_over4_pct,  xgb_data_over4_trust_full$pred_xgb_over4_trust)
  ),
  MAE = c(
    mae(lm_model_att_region_anova$AE_att_tot,   lm_attendance_region_preds),
    mae(lm_model_att_trust_anova$AE_att_tot,    lm_attendance_trust_preds),
    mae(lm_model_over4_region_anova$AE_per4_all, lm_over4_region_preds),
    mae(lm_model_over4_trust_anova$AE_per4_all,  lm_over4_trust_preds),
    mae(rf_model_att_region_full$AE_att_tot,     rf_attendance_region_preds),
    mae(rf_model_att_trust_full$AE_att_tot,      rf_attendance_trust_preds),
    mae(rf_model_over4_region_full$AE_over4_pct, rf_over4_region_preds),
    mae(rf_model_over4_trust_full$AE_over4_pct,  rf_over4_trust_preds),
    mae(prophet_fitted_values_att_region$y,      prophet_fitted_values_att_region$yhat),
    mae(prophet_fitted_values_trust$y,           prophet_fitted_values_trust$yhat),
    mae(prophet_fitted_values_over4_region$y,    prophet_fitted_values_over4_region$yhat),
    mae(prophet_fitted_values_over4_trust$y,     prophet_fitted_values_over4_trust$yhat),
    mae(xgb_data_att_region_full$AE_att_tot,     xgb_data_att_region_full$pred_xgb_att_region),
    mae(xgb_data_att_trust_full$AE_att_tot,      xgb_data_att_trust_full$pred_xgb_att_trust),
    mae(xgb_data_over4_region_full$AE_over4_pct, xgb_data_over4_region_full$pred_xgb_over4_region),
    mae(xgb_data_over4_trust_full$AE_over4_pct,  xgb_data_over4_trust_full$pred_xgb_over4_trust)
  )
)

# === Append LSTM results to the existing results table ===
results <- rbind(
  results,
  data.frame(
    Model = c(
      "LSTM Attendance (Region)",
      "LSTM Attendance (Trust)",
      "LSTM Over 4h % (Region)",
      "LSTM Over 4h % (Trust)"
    ),
    RMSE = c(
      mean(results_lstm$RMSE, na.rm = TRUE),
      mean(results_lstm_trust$RMSE, na.rm = TRUE),
      mean(results_lstm_over4$RMSE, na.rm = TRUE),
      mean(results_lstm_over4_trust$RMSE, na.rm = TRUE)
    ),
    MAE = c(
      mean(results_lstm$MAE, na.rm = TRUE),
      mean(results_lstm_trust$MAE, na.rm = TRUE),
      mean(results_lstm_over4$MAE, na.rm = TRUE),
      mean(results_lstm_over4_trust$MAE, na.rm = TRUE)
    )
  )
)

# === View final results ===
print(results)

results[order(results$RMSE), ]

library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)

# === Define label simplifier ===
simplify_labels <- function(df) {
  df %>%
    mutate(Model = case_when(
      str_detect(Model, "LM Attendance.*Trust")     ~ "LM (Trust)",
      str_detect(Model, "LM Attendance.*Region")    ~ "LM (Region)",
      str_detect(Model, "LM Over 4h.*Trust")        ~ "LM (Trust)",
      str_detect(Model, "LM Over 4h.*Region")       ~ "LM (Region)",
      str_detect(Model, "RF Attendance.*Trust")     ~ "Random Forest (Trust)",
      str_detect(Model, "RF Attendance.*Region")    ~ "Random Forest (Region)",
      str_detect(Model, "RF Over 4h.*Trust")        ~ "Random Forest (Trust)",
      str_detect(Model, "RF Over 4h.*Region")       ~ "Random Forest (Region)",
      str_detect(Model, "Prophet Attendance.*Trust")~ "Prophet (Trust)",
      str_detect(Model, "Prophet Attendance.*Region")~ "Prophet (Region)",
      str_detect(Model, "Prophet Over 4h.*Trust")   ~ "Prophet (Trust)",
      str_detect(Model, "Prophet Over 4h.*Region")  ~ "Prophet (Region)",
      str_detect(Model, "XGB Attendance.*Trust")    ~ "XGBoost (Trust)",
      str_detect(Model, "XGB Attendance.*Region")   ~ "XGBoost (Region)",
      str_detect(Model, "XGB Over 4h.*Trust")       ~ "XGBoost (Trust)",
      str_detect(Model, "XGB Over 4h.*Region")      ~ "XGBoost (Region)",
      str_detect(Model, "LSTM Attendance.*Trust")   ~ "LSTM (Trust)",
      str_detect(Model, "LSTM Attendance.*Region")  ~ "LSTM (Region)",
      str_detect(Model, "LSTM Over 4h.*Trust")      ~ "LSTM (Trust)",
      str_detect(Model, "LSTM Over 4h.*Region")     ~ "LSTM (Region)",
      TRUE ~ Model
    ))
}

# === Custom factor order ===
model_order <- c(
  "LM (Region)", "LM (Trust)",
  "Random Forest (Region)", "Random Forest (Trust)",
  "Prophet (Region)", "Prophet (Trust)",
  "XGBoost (Region)", "XGBoost (Trust)",
  "LSTM (Region)", "LSTM (Trust)"
)

# === Process attendance ===
results_attendance <- results %>%
  filter(grepl("Attendance", Model)) %>%
  mutate(Type = "Attendance") %>%
  simplify_labels() %>%
  mutate(Model = factor(Model, levels = model_order))

# === Process over 4h ===
results_over4 <- results %>%
  filter(grepl("Over 4h", Model)) %>%
  mutate(Type = "Over 4h") %>%
  simplify_labels() %>%
  mutate(Model = factor(Model, levels = model_order))

# === Reshape ===
results_att_long <- results_attendance %>%
  pivot_longer(cols = c(RMSE, MAE), names_to = "Metric", values_to = "Value")

results_over4_long <- results_over4 %>%
  pivot_longer(cols = c(RMSE, MAE), names_to = "Metric", values_to = "Value")

# === Plot 1: A&E Attendance Errors ===
plot_att <- ggplot(results_att_long, aes(x = Model, y = Value, fill = Metric)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = c("darkorange", "steelblue")) +
  labs(title = "A&E Attendance Errors by Model", x = "", y = "Error") +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5)  # Title to right
  )

# === Plot 2: % Over 4h Errors ===
plot_over4 <- ggplot(results_over4_long, aes(x = Model, y = Value, fill = Metric)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = c("darkgreen", "skyblue")) +
  labs(title = "% Over 4h Errors by Model", x = "", y = "Error") +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5)  # Title to right
  )

# Display
print(plot_att)
print(plot_over4)

