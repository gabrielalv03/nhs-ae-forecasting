# === LOAD LIBRARIES ===
library(dplyr)
library(ggplot2)
library(sf)
library(viridis)
library(gridExtra)

# === 1. Load and prepare map data ===
regions_map <- st_read("NHSER_JAN_2024_EN_BGC.shp") %>%
  mutate(NHSER24NM = tolower(trimws(NHSER24NM)))

# === 2. Prepare forecast data ===
# Predicted attendances for Jul–Dec 2024
forecast_df <- comparison_att_region_df %>%
  filter(ds >= as.Date("2024-07-01") & ds <= as.Date("2024-12-31")) %>%
  group_by(region) %>%
  summarise(predicted_att = sum(pred_rf_AE_att_tot, na.rm = TRUE), .groups = "drop")

# Actual attendances for Jan–Jun 2024
baseline_df <- train_data %>%
  filter(date >= as.Date("2024-01-01") & date <= as.Date("2024-06-30")) %>%
  group_by(region) %>%
  summarise(baseline_att = sum(AE_att_tot, na.rm = TRUE), .groups = "drop")

# Calculate % change
heatmap_data <- forecast_df %>%
  left_join(baseline_df, by = "region") %>%
  mutate(
    region = tolower(trimws(gsub("^NHS England ", "", region))),
    pct_change = (predicted_att - baseline_att) / baseline_att
  )

# === 3. Calculate RMSE per region ===
error_df <- comparison_att_region_df %>%
  filter(ds >= as.Date("2024-07-01") & ds <= as.Date("2024-12-31")) %>%
  group_by(region) %>%
  summarise(
    rmse = sqrt(mean((actual_AE_att_tot - pred_rf_AE_att_tot)^2, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  mutate(region = tolower(trimws(gsub("^NHS England ", "", region))))

# === 4. Join all to map ===
map_df <- regions_map %>%
  left_join(heatmap_data, by = c("NHSER24NM" = "region")) %>%
  left_join(error_df, by = c("NHSER24NM" = "region"))

# === 5. Build the map plot ===
map_plot <- ggplot(map_df) +
  geom_sf(aes(fill = pct_change), color = "white", linewidth = 0.3) +
  scale_fill_viridis_c(name = "% Change", labels = scales::percent, option = "C") +
  labs(
    title = "Forecasted A&E Attendance Surge by NHS Region",
    subtitle = "Jul–Dec 2024 vs Jan–Jun 2024"
  ) +
  theme_minimal()

# === 6. Build the bottom legend (2 columns, slim tiles, compact spacing) ===
n_regions <- nrow(map_df)
n_cols <- 2
n_rows <- ceiling(n_regions / n_cols)

legend_data <- map_df %>%
  st_drop_geometry() %>%
  mutate(
    Region = tools::toTitleCase(NHSER24NM),
    Label = paste0(Region, ": RMSE = ", format(round(rmse), big.mark = ","), 
                   "; Δ = ", round(pct_change * 100, 1), "%"),
    Fill = pct_change
  ) %>%
  arrange(desc(pct_change)) %>%
  mutate(
    row = rep(1:n_rows, times = n_cols)[1:n_regions],
    col = rep(1:n_cols, each = n_rows)[1:n_regions],
    x = ifelse(col == 1, 1, 2.55),  # space between columns
    y = -row
  )

legend_plot <- ggplot(legend_data) +
  geom_tile(aes(x = x, y = y, fill = Fill), width = 0.05, height = 0.8) +
  geom_text(aes(x = x + 0.08, y = y, label = Label), hjust = 0, size = 3.2) +
  scale_fill_viridis_c(option = "C", guide = "none") +
  labs(title = "RMSE & % Change by Region") +
  theme_void() +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 0.5),
    plot.margin = margin(5, 5, 5, 5)
  ) +
  coord_cartesian(clip = "off") +
  xlim(0.8, 3.5)

# === 7. Combine map and legend ===
grid.arrange(
  map_plot,
  legend_plot,
  nrow = 2,
  heights = c(2.5, 1.2)
)
