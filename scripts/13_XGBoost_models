library(dplyr)
library(xgboost)

# Common numeric features
xgb_features <- c(
  "weighted_imd", "flu_percent", "covid_percent",
  "bank_holiday_number", "temperature", "population_density", "gp_patients_per_gp"
)

# === Prep ===
train_data <- train_data %>%
  mutate(across(where(is.character), ~ na_if(., "-"))) %>%
  mutate(
    AE_att_tot = as.numeric(AE_att_tot),
    AE_per4_all = as.numeric(AE_per4_all),
    AE_over4_pct = 1 - AE_per4_all,
    across(all_of(xgb_features), as.numeric),
    season = as.factor(season)
  )

# =============================
# 1. XGBoost: Attendances by Region
# =============================
xgb_region_data <- train_data %>%
  group_by(region, date, season) %>%
  summarise(
    AE_att_tot = sum(AE_att_tot, na.rm = TRUE),
    across(all_of(xgb_features), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

xgb_region_matrix <- cbind(
  model.matrix(~ season - 1, xgb_region_data),
  as.matrix(select(xgb_region_data, all_of(xgb_features)))
)

xgb_model_att_region <- xgboost(
  data = xgb_region_matrix,
  label = xgb_region_data$AE_att_tot,
  objective = "reg:squarederror",
  nrounds = 100,
  verbose = 0
)

saveRDS(xgb_model_att_region, "xgb_attendance_region.rds")

# =============================
# 2. XGBoost: Attendances by Trust
# =============================
xgb_trust_data <- train_data %>%
  group_by(name, date, season) %>%
  summarise(
    AE_att_tot = sum(AE_att_tot, na.rm = TRUE),
    across(all_of(xgb_features), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

xgb_trust_matrix <- cbind(
  model.matrix(~ season - 1, xgb_trust_data),
  as.matrix(select(xgb_trust_data, all_of(xgb_features)))
)

xgb_model_att_trust <- xgboost(
  data = xgb_trust_matrix,
  label = xgb_trust_data$AE_att_tot,
  objective = "reg:squarederror",
  nrounds = 100,
  verbose = 0
)

saveRDS(xgb_model_att_trust, "xgb_attendance_trust.rds")

# =============================
# 3. XGBoost: % Over 4h by Region
# =============================
xgb_over4_region_data <- train_data %>%
  group_by(region, date, season) %>%
  summarise(
    AE_over4_pct = mean(AE_over4_pct, na.rm = TRUE),
    across(all_of(xgb_features), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

xgb_over4_region_matrix <- cbind(
  model.matrix(~ season - 1, xgb_over4_region_data),
  as.matrix(select(xgb_over4_region_data, all_of(xgb_features)))
)

xgb_model_over4_region <- xgboost(
  data = xgb_over4_region_matrix,
  label = xgb_over4_region_data$AE_over4_pct,
  objective = "reg:squarederror",
  nrounds = 100,
  verbose = 0
)

saveRDS(xgb_model_over4_region, "xgb_over4_region.rds")

# =============================
# 4. XGBoost: % Over 4h by Trust
# =============================
xgb_over4_trust_data <- train_data %>%
  group_by(name, date, season) %>%
  summarise(
    AE_over4_pct = mean(AE_over4_pct, na.rm = TRUE),
    across(all_of(xgb_features), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop"
  ) %>%
  filter(if_all(everything(), ~ !is.na(.)))

xgb_over4_trust_matrix <- cbind(
  model.matrix(~ season - 1, xgb_over4_trust_data),
  as.matrix(select(xgb_over4_trust_data, all_of(xgb_features)))
)

xgb_model_over4_trust <- xgboost(
  data = xgb_over4_trust_matrix,
  label = xgb_over4_trust_data$AE_over4_pct,
  objective = "reg:squarederror",
  nrounds = 100,
  verbose = 0
)

saveRDS(xgb_model_over4_trust, "xgb_over4_trust.rds")

